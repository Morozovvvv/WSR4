Контекст:

private static TheatreEntities _context;

public static TheatreEntities GetContext()
        {
            if (_context == null)
            {
                _context = new TheatreEntities();

            }
            return _context;
        }

Вывод таблицы:

            dGridSpectacles.ItemsSource = TheatreEntities.GetContext().Spectacles.ToList();

Обновление:

TheatreEntities.GetContext().ChangeTracker.Entries().ToList().ForEach(p => p.Reload());
            dGridSpectacles.ItemsSource = TheatreEntities.GetContext().Spectacles.ToList();


Удаление:

var spectacleForRemoving = dGridSpectacles.SelectedItems.Cast<Spectacle>().ToList();
            if (MessageBox.Show($"Вы точно хотите удалить следующие {spectacleForRemoving.Count()} элементов?", "Внимание",
                MessageBoxButton.YesNo, MessageBoxImage.Question) == MessageBoxResult.Yes)
            {
                try
                {
                    TheatreEntities.GetContext().Spectacles.RemoveRange(spectacleForRemoving);
                    TheatreEntities.GetContext().SaveChanges();
                    MessageBox.Show("Данные удалены!");
                    dGridSpectacles.ItemsSource = TheatreEntities.GetContext().Spectacles.ToList();

                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message.ToString());
                }
            }

Комбобоксы:

            genreComboBox.ItemsSource = TheatreEntities.GetContext().Genres.ToList();
<ComboBox x:Name="genreComboBox" HorizontalAlignment="Left" Margin="45,24,0,0" VerticalAlignment="Top" Width="120" SelectedItem="{Binding Каталог}" DisplayMemberPath="Бренд" SelectionChanged="ComboBox_SelectionChanged"/>


Добавление:


            StringBuilder errors = new StringBuilder();
            if (string.IsNullOrWhiteSpace(actor.FullName))
                errors.AppendLine("Укажите ФИО");
            if (string.IsNullOrWhiteSpace(actor.Education))
                errors.AppendLine("Укажите образование");
            if (string.IsNullOrWhiteSpace(actor.AwardsOrTitles))
                errors.AppendLine("Укажите награды или звания");
            if (string.IsNullOrWhiteSpace(actor.ActorIMG))
                errors.AppendLine("прикрепите изображение");
            if (errors.Length > 0)
            {
                MessageBox.Show(errors.ToString());
                return;
            }
            if (actor.id == 0)
            {
                TheatreEntities.GetContext().Actors.Add(actor);
            }
            try
            {
                TheatreEntities.GetContext().SaveChanges();
                MessageBox.Show("Информация сохранена!");
                addActorWindow.Close();

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message.ToString());
            }

Пример создания datagrid + столбцы текста, изображения и кнопки редактирования:

<DataGrid x:Name="dGridActors" Grid.Row="2" AutoGenerateColumns="False" IsReadOnly="True">
                
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Фото" Width="130">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="Auto" Source="{Binding ActorIMG}" Stretch="Fill" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn  Header="ФИО" Binding="{Binding FullName}" Width="250">



                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                                <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>


                            </Style>
                        </DataGridTextColumn.ElementStyle>


                    </DataGridTextColumn>
                    <DataGridTemplateColumn >
                        <DataGridTemplateColumn.CellTemplate>

                            <DataTemplate>
                                <Button Content="Редактировать" Name="btnEdit" Click="btnEdit_Click" Width="130" HorizontalAlignment="Center" Cursor="Hand"></Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

Пример создания  ListView + айтема:


<ListView Grid.Row="1" Grid.Column="0" BorderBrush="White" ScrollViewer.CanContentScroll="False"
                  ScrollViewer.HorizontalScrollBarVisibility="Hidden" Margin="0" HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch" Background="{x:Null}" BorderThickness="5,5,5,5" >
            <ListViewItem x:Name="backTologinItem" Height="60" BorderBrush="{x:Null}" GotFocus="backTologinItem_GotFocus" Background="{x:Null}" >
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="ArrowLeft" 
                                             Foreground="White"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Width="30"
                                            Height="30"/>
                    <TextBlock Text="Назад"
                               FontSize="26"
                               VerticalAlignment="Center"
                               Margin="20 0" Foreground="White" FontFamily="./#Gilroy Bold"/>

                </StackPanel>
            </ListViewItem>


Нахождение пользователя в базе:

SqlCommands command = new SqlCommands();
                    DataTable dt_user = command.Select("SELECT * FROM [dbo].[Users] WHERE [login] = '" + logBox.Text + "' AND [password] = '" + passBox.Password + "'");
                    if (dt_user.Rows.Count > 0) // если такая запись существует       
                    {
                        MainMenuWindow mainMenuWindow = new MainMenuWindow();
                        mainMenuWindow.Show();
                        authorizationWindow.Close();
                    }
                    else
                    {
                        MessageBox.Show("Пользователя не найден");
                    }

раскрыть, закрыть пароль 

private void showPass_Click(object sender, RoutedEventArgs e)
        {
            passBox2.Text = passBox.Password;
            passBox.Visibility = Visibility.Hidden;
            passBox2.Visibility = Visibility.Visible;
            showPassIcon.Kind = MaterialDesignThemes.Wpf.PackIconKind.EyeOff;
            Button btn = sender as Button;
            btn.Click -= new RoutedEventHandler(showPass_Click);
            btn.Click += new RoutedEventHandler(showPass_Click_1);
        }
        private void showPass_Click_1(object sender, RoutedEventArgs e)
        {

            passBox.Password = passBox2.Text;
            passBox.Visibility = Visibility.Visible;
            passBox2.Visibility = Visibility.Hidden;
            showPassIcon.Kind = MaterialDesignThemes.Wpf.PackIconKind.Eye;
            Button btn = sender as Button;
            btn.Click -= new RoutedEventHandler(showPass_Click_1);
            btn.Click += new RoutedEventHandler(showPass_Click);
        }

Метод для связи с БД 

public DataTable Select(string selectSQL) // функция подключения к базе данных и обработка запросов
        {
            DataTable dataTable = new DataTable("dataBase");                // создаём таблицу в приложении
                                                                            // подключаемся к базе данных
            SqlConnection sqlConnection = new SqlConnection("server=DESKTOP-EUJ3RDU;Trusted_Connection=Yes;DataBase=Theatre_Nemov_ISP-31;");
            sqlConnection.Open();                                           // открываем базу данных
            SqlCommand sqlCommand = sqlConnection.CreateCommand();          // создаём команду
            sqlCommand.CommandText = selectSQL;                             // присваиваем команде текст
            SqlDataAdapter sqlDataAdapter = new SqlDataAdapter(sqlCommand); // создаём обработчик
            sqlDataAdapter.Fill(dataTable);                                 // возращаем таблицу с результатом
            return dataTable;
        }


Гости
String p = "asd"; - в скобочках переменная.   
///

 {
            InitializeComponent();
            asd.ItemsSource = glazyrinDanilEntities.GetContext().Каталог.ToList();
            if (p == "asd")
            {
                delete.IsEnabled = false;
            }
        }
        
ListView: 

<Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="150"/>
            <RowDefinition/>

        </Grid.RowDefinitions>
        <Border Grid.Row="0" Background="Black" Height="80" VerticalAlignment="Top"/>
        <TextBox Width="225" Name="TBoxSearch" TextChanged="TBoxSearch_TextChanged" VerticalAlignment="Bottom" />
        <ComboBox Width="225" Name="ComboManufacture" DisplayMemberPath="ManufacturerName" SelectionChanged="ComboManufacture_SelectionChanged"/>
        <ListView x:Name="lvProducts" Grid.Row="1">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="600"/>

                            <ColumnDefinition Width="300"/>


                        </Grid.ColumnDefinitions>
                        <Image Width="250" Grid.Row="1" Grid.Column="0"  Stretch="UniformToFill"  HorizontalAlignment="Center" Margin="5" Source="{Binding ProductPhoto}"/>
                        <StackPanel>
                            
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock  Grid.Column="1" Width="300" FontSize="26" Text="{Binding ProductName}" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center"></TextBlock>
                            <TextBlock  Grid.Column="1" Width="300" FontSize="26" Text="{Binding ProductDescription}" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center"></TextBlock>
                            <TextBlock  Width="300" Grid.Column="1" FontSize="26" Text="{Binding Manufacturer.ManufacturerName}" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center"></TextBlock>
                            <TextBlock  Width="300" Grid.Column="1" FontSize="26" Text="{Binding ProductCost}" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center"></TextBlock>
                        </StackPanel>
                        <TextBlock Grid.Column="2" FontSize="26" Text="{Binding ProductQuantityInStock}" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center"></TextBlock>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>